import streamlit as st
import pandas as pd
import gspread
import json
from oauth2client.service_account import ServiceAccountCredentials

st.set_page_config(page_title="‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", layout="centered")

# ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å Secrets
service_account_info = json.loads(st.secrets["GCP_SERVICE_ACCOUNT"])

scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, scope)
client = gspread.authorize(creds)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
spreadsheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1B_W02AlW7RoV2_qbOHAfVTTYUkKgfyqvjl_IgqQVmzc")
worksheet = spreadsheet.sheet1
df = pd.DataFrame(worksheet.get_all_records())
df['‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'] = df['‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'].astype(str)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏ú‡∏• BMI
def interpret_bmi(bmi):
    if bmi < 18.5:
        return "‡∏ú‡∏≠‡∏°‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ"
    elif bmi < 23:
        return "‡∏õ‡∏Å‡∏ï‡∏¥"
    elif bmi < 25:
        return "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô"
    elif bmi < 30:
        return "‡∏≠‡πâ‡∏ß‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö 1"
    else:
        return "‡∏≠‡πâ‡∏ß‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö 2"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î BMI
def calculate_bmi(weight, height_cm):
    try:
        height_m = height_cm / 100
        return round(weight / (height_m ** 2), 1)
    except:
        return None

def interpret_bmi(bmi):
    if not bmi or bmi == 0:
        return "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    elif bmi > 30:
        return "‡∏≠‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å"
    elif 25 <= bmi <= 30:
        return "‡∏≠‡πâ‡∏ß‡∏ô"
    elif 23 <= bmi < 25:
        return "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô"
    elif 18.5 <= bmi < 23:
        return "‡∏õ‡∏Å‡∏ï‡∏¥"
    else:
        return "‡∏ú‡∏≠‡∏°"

def show_bmi(df):
    st.header("‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å / ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á / BMI")

    year_options = [str(y) for y in range(61, 69)]
    selected_year = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ ‡∏û.‡∏®.", year_options[::-1])

    weight_col = f"‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å{selected_year}"
    height_col = f"‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á{selected_year}"
    bmi_col = f"BMI{selected_year}"
    waist_col = f"‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß{selected_year}"

    weight = df.iloc[0].get(weight_col)
    height = df.iloc[0].get(height_col)
    waist = df.iloc[0].get(waist_col)

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ float ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
    try:
        weight = float(weight)
    except:
        weight = None

    try:
        height = float(height)
    except:
        height = None

    try:
        waist = float(waist)
    except:
        waist = None

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI ‡∏à‡∏≤‡∏Å weight & height
    bmi = calculate_bmi(weight, height)
    bmi_result = interpret_bmi(bmi)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    st.markdown(f"**‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:** {weight if weight else '-'} ‡∏Å‡∏Å.")
    st.markdown(f"**‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á:** {height if height else '-'} ‡∏ã‡∏°.")
    st.markdown(f"**‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß:** {waist if waist else '-'} ‡∏ã‡∏°.")
    st.markdown(f"**BMI:** {bmi if bmi else '-'}")
    st.success(f"‡πÅ‡∏õ‡∏•‡∏ú‡∏•: {bmi_result}")

# --- ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö ---
st.title("üë®‚Äç‚öïÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û")
id_card = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å")

if id_card:
    person = df[df["‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"] == id_card]

    if person.empty:
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
    else:
        df = person  # ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô
        name = df.iloc[0]["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"]
        st.success(f"‡∏Ñ‡∏∏‡∏ì {name}")

        st.subheader("üìÇ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:")
        col1, col2, col3 = st.columns(3)

        with col1:
            if st.button("‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å / BMI"):
                show_bmi(df)

        with col2:
            if st.button("ü©∏ ‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏•‡∏∑‡∏≠‡∏î"):
                st.info("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

        with col3:
            if st.button("üíì ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô / ‡∏ä‡∏µ‡∏û‡∏à‡∏£"):
                st.info("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
